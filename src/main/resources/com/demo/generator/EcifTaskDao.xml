<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.generator.EcifTaskDao">
  <resultMap id="BaseResultMap" type="com.demo.generator.EcifTask">
    <id column="TASK_ID" jdbcType="VARCHAR" property="taskId" />
    <result column="TASK_NAME" jdbcType="VARCHAR" property="taskName" />
    <result column="TASK_STATUS_CODE" jdbcType="VARCHAR" property="taskStatusCode" />
    <result column="PROMOTER_USER" jdbcType="VARCHAR" property="promoterUser" />
    <result column="CREATE_TIME" jdbcType="DATE" property="createTime" />
    <result column="UNTIL_TIME" jdbcType="DATE" property="untilTime" />
    <result column="UPDATE_TIME" jdbcType="DATE" property="updateTime" />
    <result column="TASK_RULES_ID" jdbcType="VARCHAR" property="taskRulesId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TASK_ID, TASK_NAME, TASK_STATUS_CODE, PROMOTER_USER, CREATE_TIME, UNTIL_TIME, UPDATE_TIME, 
    TASK_RULES_ID
  </sql>
  <select id="selectByExample" parameterType="com.demo.generator.EcifTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AUDIT.ECIF_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ECIF_TASK
    where TASK_ID = #{taskId,jdbcType=VARCHAR}
  </select>
  <select id="selectPreTaskByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ECIF_TASK
    where TASK_ID = #{taskId,jdbcType=VARCHAR}
    and task_status_code = #{taskStatusCode,jdbcType=VARCHAR}
  </select>
  <select id="selectLatest" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from (
         select
        <include refid="Base_Column_List"/>
        from ECIF_TASK order by create_time desc
    ) t where rownum = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from AUDIT.ECIF_TASK
    where TASK_ID = #{taskId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.generator.EcifTaskExample">
    delete from AUDIT.ECIF_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.generator.EcifTask">
    insert into ECIF_TASK (TASK_NAME, TASK_STATUS_CODE, PROMOTER_USER,
      CREATE_TIME, UNTIL_TIME, TASK_RULES_ID)
    values (#{taskName,jdbcType=VARCHAR}, #{taskStatusCode,jdbcType=VARCHAR}, #{promoterUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{untilTime,jdbcType=DATE}, #{taskRulesId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.generator.EcifTask">
    insert into ECIF_TASK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        TASK_ID,
      </if>
      <if test="taskName != null">
        TASK_NAME,
      </if>
      <if test="taskStatusCode != null">
        TASK_STATUS_CODE,
      </if>
      <if test="promoterUser != null">
        PROMOTER_USER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="untilTime != null">
        UNTIL_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="taskRulesId != null">
        TASK_RULES_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskStatusCode != null">
        #{taskStatusCode,jdbcType=VARCHAR},
      </if>
      <if test="promoterUser != null">
        #{promoterUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="untilTime != null">
        #{untilTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="taskRulesId != null">
        #{taskRulesId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.generator.EcifTaskExample" resultType="java.lang.Long">
    select count(*) from AUDIT.ECIF_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update AUDIT.ECIF_TASK
    <set>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null">
        TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStatusCode != null">
        TASK_STATUS_CODE = #{record.taskStatusCode,jdbcType=VARCHAR},
      </if>
      <if test="record.promoterUser != null">
        PROMOTER_USER = #{record.promoterUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.untilTime != null">
        UNTIL_TIME = #{record.untilTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.taskRulesId != null">
        TASK_RULES_ID = #{record.taskRulesId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update AUDIT.ECIF_TASK
    set TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      TASK_STATUS_CODE = #{record.taskStatusCode,jdbcType=VARCHAR},
      PROMOTER_USER = #{record.promoterUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UNTIL_TIME = #{record.untilTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      TASK_RULES_ID = #{record.taskRulesId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.generator.EcifTask">
    update ECIF_TASK
    <set>
      <if test="taskName != null">
        TASK_NAME = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskStatusCode != null">
        TASK_STATUS_CODE = #{taskStatusCode,jdbcType=VARCHAR},
      </if>
      <if test="promoterUser != null">
        PROMOTER_USER = #{promoterUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="untilTime != null">
        UNTIL_TIME = #{untilTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="taskRulesId != null">
        TASK_RULES_ID = #{taskRulesId,jdbcType=VARCHAR},
      </if>
    </set>
    where TASK_ID = #{taskId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.generator.EcifTask">
    update ECIF_TASK
    set TASK_NAME = #{taskName,jdbcType=VARCHAR},
      TASK_STATUS_CODE = #{taskStatusCode,jdbcType=VARCHAR},
      PROMOTER_USER = #{promoterUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UNTIL_TIME = #{untilTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      TASK_RULES_ID = #{taskRulesId,jdbcType=VARCHAR}
    where TASK_ID = #{taskId,jdbcType=VARCHAR}
  </update>
</mapper>